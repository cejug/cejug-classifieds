<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" targetNamespace="http://cejug-classifieds.dev.java.net/rss"
	xmlns:rss="http://cejug-classifieds.dev.java.net/rss" version="2.0.1.12">
	<xs:annotation>
		<xs:documentation>Based on the RSS 2.0 schema published at
			http://www.codeplex.com/rss2schema/</xs:documentation>
		<xs:documentation>$HeadURL:https://cejug-classifieds.dev.java.net/svn/cejug-classifieds/trunk/cejug-classifieds-server/conf/ejb/META-INF/wsdl/rss.xsd $</xs:documentation>
		<xs:documentation>$Author:felipegaucho $</xs:documentation>
		<xs:documentation>$Rev:632 $</xs:documentation>
		<xs:documentation>$Date: 2008-08-15 19:29:14 +0200 (Fri, 15 Aug
			2008) $</xs:documentation>
	</xs:annotation>
	<xs:element name="rss">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="rss:channel" />
				<xs:any namespace="##other" processContents="lax" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="version" type="xs:decimal" use="required"
				fixed="2.0" />
			<xs:anyAttribute namespace="##any" />
		</xs:complexType>
	</xs:element>
	<!--
		http://www.ibm.com/developerworks/webservices/library/ws-tip-xsdchoice.html
	-->
	<xs:element name="item">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="title" type="xs:string" minOccurs="0" />
				<xs:element name="description" type="xs:string"
					minOccurs="0" />
				<xs:element name="link" type="xs:anyURI" minOccurs="0" />
				<xs:element name="author" type="rss:tEmailAddress"
					minOccurs="0" />
				<xs:element name="category" type="rss:tCategory"
					minOccurs="0" />
				<xs:element name="comments" type="xs:anyURI" minOccurs="0" />
				<xs:element name="enclosure" type="rss:tEnclosure"
					minOccurs="0" />
				<xs:element name="guid" type="rss:tGuid" minOccurs="0" />
				<xs:element name="pubDate" type="rss:tRfc822FormatDate"
					minOccurs="0" />
				<xs:element name="source" type="rss:tSource" minOccurs="0" />
				<xs:any namespace="##other" processContents="lax" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:anyAttribute namespace="##any" />
		</xs:complexType>
	</xs:element>
	<xs:element name="channel">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="title" type="xs:string" />
				<xs:element name="link" type="xs:anyURI" />
				<xs:element name="description" type="xs:string" />
				<xs:element name="language" type="xs:language" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="copyright" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="managingEditor" type="rss:tEmailAddress"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="webMaster" type="rss:tEmailAddress"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="pubDate" type="rss:tRfc822FormatDate"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="lastBuildDate" type="rss:tRfc822FormatDate"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="category" type="rss:tCategory"
					minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="generator" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="docs" type="xs:anyURI" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="cloud" type="rss:tCloud" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="ttl" type="xs:nonNegativeInteger"
					minOccurs="0" />
				<xs:element name="image" type="rss:tImage" minOccurs="0" />
				<xs:element name="textInput" type="rss:tTextInput"
					minOccurs="0" />
				<xs:element name="skipHours" type="rss:tSkipHoursList"
					minOccurs="0" />
				<xs:element name="skipDays" type="rss:tSkipDaysList"
					minOccurs="0" />
				<xs:any namespace="##other" processContents="lax" minOccurs="0"
					maxOccurs="unbounded" />
				<xs:element ref="rss:item" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:anyAttribute namespace="##any" />
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="tSkipHour">
		<xs:annotation>
			<xs:documentation>A time in GMT when aggregators should not request
				the channel data. The hour beginning at midnight is hour zero.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:nonNegativeInteger">
			<xs:minInclusive value="0" />
			<xs:maxInclusive value="23" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tSkipHoursList">
		<xs:sequence>
			<xs:element name="hour" type="rss:tSkipHour" minOccurs="0"
				maxOccurs="24" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="tSkipDay">
		<xs:annotation>
			<xs:documentation>A day when aggregators should not request the
				channel data.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Monday" />
			<xs:enumeration value="Tuesday" />
			<xs:enumeration value="Wednesday" />
			<xs:enumeration value="Thursday" />
			<xs:enumeration value="Friday" />
			<xs:enumeration value="Saturday" />
			<xs:enumeration value="Sunday" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tSkipDaysList">
		<xs:sequence>
			<xs:element name="day" type="rss:tSkipDay" minOccurs="0"
				maxOccurs="7">
				<xs:annotation>
					<xs:documentation>A time in GMT, when aggregators should not
						request the channel data. The hour beginning at midnight is hour
						zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tCategory">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="domain" type="xs:string" use="optional" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="tImage">
		<xs:all>
			<xs:element name="url" type="xs:anyURI">
				<xs:annotation>
					<xs:documentation>The URL of the image file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="title" type="xs:string">
				<xs:annotation>
					<xs:documentation>Describes the image, it's used in the
						ALT attribute of the HTML &lt;img&gt; tag when the channel is rendered in HTML.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="link" type="xs:anyURI">
				<xs:annotation>
					<xs:documentation>The URL of the site, when the channel is rendered, the image is a link to the site. (Note, in practice the image &lt;title&gt; and &lt;link&gt; should have the same value as the channel's &lt;title&gt; and &lt;link&gt;. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="width" type="rss:tImageWidth" default="88" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The width of the image in pixels.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="height" type="rss:tImageHeight" default="31" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The height of the image in pixels.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text that is included in the TITLE attribute of the link formed around the image in the HTML rendering.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:simpleType name="tImageHeight">
		<xs:annotation>
			<xs:documentation>The height of the image in pixels.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:positiveInteger">
			<xs:maxInclusive value="400"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tImageWidth">
		<xs:annotation>
			<xs:documentation>The width of the image in pixels.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:positiveInteger">
			<xs:maxInclusive value="144"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tCloud">
		<xs:annotation>
			<xs:documentation>Specifies a web service that supports the rssCloud interface which can be implemented in HTTP-POST, XML-RPC or SOAP 1.1. 
Its purpose is to allow processes to register with a cloud to be notified of updates to the channel, implementing a lightweight publish-subscribe protocol for RSS feeds.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="domain" type="xs:string" use="required"/>
		<xs:attribute name="port" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="path" type="xs:string" use="required"/>
		<xs:attribute name="registerProcedure" type="xs:string" use="required"/>
		<xs:attribute name="protocol" type="rss:tCloudProtocol" use="required"/>
	</xs:complexType>
	<xs:simpleType name="tCloudProtocol">
		<xs:restriction base="xs:string">
			<xs:enumeration value="xml-rpc"/>
			<xs:enumeration value="http-post"/>
			<xs:enumeration value="soap"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tTextInput">
		<xs:annotation>
			<xs:documentation>The purpose of this element is something of a mystery! You can use it to specify a search engine box. Or to allow a reader to provide feedback. Most aggregators ignore it.</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="title" type="xs:string">
				<xs:annotation>
					<xs:documentation>The label of the Submit button in the text input area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="xs:string">
				<xs:annotation>
					<xs:documentation>Explains the text input area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the text object in the text input area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="link" type="xs:anyURI">
				<xs:annotation>
					<xs:documentation>The URL of the CGI script that processes text input requests.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:simpleType name="tEmailAddress">
		<xs:annotation>
			<xs:documentation>Using the regexp definiton of E-Mail Address by Lucadean from the .NET RegExp Pattern Repository at http://www.3leaf.com/default/NetRegExpRepository.aspx
</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="([a-zA-Z0-9_\-])([a-zA-Z0-9_\-\.]*)@(\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}|((([a-zA-Z0-9\-]+)\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="tRfc822FormatDate">
		<xs:annotation>
			<xs:documentation>A date-time displayed in RFC-822 format.</xs:documentation>
			<xs:documentation>Using the regexp definiton of rfc-822 date by Sam Ruby at http://www.intertwingly.net/blog/1360.html
</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(((Mon)|(Tue)|(Wed)|(Thu)|(Fri)|(Sat)|(Sun)), *)?\d\d? +((Jan)|(Feb)|(Mar)|(Apr)|(May)|(Jun)|(Jul)|(Aug)|(Sep)|(Oct)|(Nov)|(Dec)) +\d\d(\d\d)? +\d\d:\d\d(:\d\d)? +(([+\-]?\d\d\d\d)|(UT)|(GMT)|(EST)|(EDT)|(CST)|(CDT)|(MST)|(MDT)|(PST)|(PDT)|\w)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="tSource">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="url" type="xs:anyURI"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="tEnclosure">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="url" type="xs:anyURI" use="required">
					<xs:annotation>
						<xs:documentation>URL where the enclosure is located</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="length" type="xs:nonNegativeInteger" use="required">
					<xs:annotation>
						<xs:documentation>Size in bytes</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="type" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>MIME media-type of the enclosure</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="tGuid">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="isPermaLink" type="xs:boolean" use="optional" default="true"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>
